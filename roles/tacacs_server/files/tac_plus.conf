# Created by Henry-Nicolas Tourneur(henry.nicolas@tourneur.be)
# See man(5) tac_plus.conf for more details

# Define where to log accounting data, this is the default.
accounting file = /var/log/tac_plus.acct

# This is the key that clients have to use to access Tacacs+

key = tacacskey

# Use /etc/passwd file to do authentication

#default authentication = file /etc/passwd

user = adminuser {
    default service = permit
    member = admingroup
    pap = cleartext password
    login = cleartext password
}

user = basicuser {
    default service = permit
    member = basicgroup
    pap = cleartext password
    login = cleartext password
}
user = timeuser {
    default service = deny
    member = timegroup
    pap = cleartext password
    login = cleartext password
}

# You can use feature like per host key with different enable passwords
#host = 127.0.0.1 {
#        key = test
#        type = cisco
#        enable = <des|cleartext> enablepass
#        prompt = "Welcome XXX ISP Access Router \n\nUsername:"
#}

# We also can define local users and specify a file where data is stored.
# That file may be filled using tac_pwd
#user = test1 {
#    name = "Test User"
#    member = staff
#    login = file /etc/tacacs/tacacs_passwords
#}

# We can also specify rules valid per group of users.
#group = group1 {
#   cmd = conf {
#       deny
#   }
#}

# Another example : forbid configure command for some hosts
# for a define range of clients
#group = group1 {
#   login = PAM
#   service = ppp
#   protocol = ip {
#       addr = 10.10.0.0/24
#   }
#   cmd = conf {
#       deny .*
#   }
#}

user = DEFAULT {
    login = PAM
    service = ppp protocol = ip {}
}

# Much more features are availables, like ACL, more service compatibilities,
# commands authorization, scripting authorization.
# See the man page for those features.


#####################################################################
#group details are defined here

# admin group can do anything on network gear
        group = admingroup {
        default service = permit
        service = exec {
         priv-lvl = 15
        }
}

# basic group can run show commands and diagnostics but not change system configuration
        group = basicgroup {
        default service = permit
        service = exec {
         priv-lvl = 2
        }
}
# group for the time users 
group = timegroup {
default service = deny
cmd = net { permit "show time *" }
service = exec {
priv-lvl = 1 }
}
